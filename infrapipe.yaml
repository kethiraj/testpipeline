---
resources:
- name: spring-boot-service
  type: git
  source:
    uri: https://github.com/kethiraj/testpipeline.git
    branch: master
    
- name: spring-boot-service-docker-repository
  type: docker-image
  source:
    email: ((docker-hub-email))
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    repository: ((docker-hub-username))/((docker-hub-repo-name))    

jobs:
  - name: test
    public: true
    plan:
      - get: spring-boot-service
        trigger: true
      - task: mvn-test
        file: "spring-boot-service/tasks/maven-test.yml"
  - name: package
    public: true
    serial: true
    plan:
      - get: spring-boot-service
        trigger: true
        passed: [test]
      - task: mvn-package
        file: "spring-boot-service/tasks/maven-package.yml"
      - put: spring-boot-service-docker-repository
        params:
          build: spring-boot-service-out
      
      
  - name: deploy
    serial: true
    plan:
    - get: spring-boot-service
      trigger: true
      passed: [package]
    - task: run-terraform
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: hashicorp/terraform}
        inputs:
            - name: spring-boot-service        
        run:
            path: sh
            args: 
                - -exc
                - |
                  env
                  ls -lrth
                  cd spring-boot-service
                  ls -ltrh
                  terraform init
        params:
          AWS_ACCESS_KEY_ID: ((access-key))
          AWS_SECRET_ACCESS_KEY: ((secret-key))

    - task: terraform-plan
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: hashicorp/terraform}

        inputs:  
          - name: spring-boot-service
        run: 
          path: sh
          args:
                - -exc
                - |
                  env
                  ls -lrth
                  cd spring-boot-service
                  ls -ltrh
                  terraform init
                  terraform plan
        params:
          AWS_ACCESS_KEY_ID: ((access-key))
          AWS_SECRET_ACCESS_KEY: ((secret-key))
    - task: terraform-apply
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: hashicorp/terraform}

        inputs:
           - name: spring-boot-service
        run:
          path: sh
          args:
                - -exc
                - |
                  env
                  ls -lrth
                  cd spring-boot-service
                  ls -ltrh
                  terraform init
                  terraform apply -auto-approve
        params:
          AWS_ACCESS_KEY_ID: ((access-key))
          AWS_SECRET_ACCESS_KEY: ((secret-key))
        

    - task: remove-terraform
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: hashicorp/terraform}
        inputs:
            - name: spring-boot-service
        run:
            path: sh
            args: 
                - -exc
                - |
                  ls -lrth
                  cd spring-boot-service
                  terraform init
                  terraform destroy --auto-approve        
        params:
          AWS_ACCESS_KEY_ID: ((access-key))
          AWS_SECRET_ACCESS_KEY: ((secret-key))      
